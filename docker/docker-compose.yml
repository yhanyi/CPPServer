version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
      - "9091:9091"
    depends_on:
      - db
      - prometheus
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=cache_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: on-failure

  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=cache_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ../prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    ports:
      - "8081:8080"
    volumes:
      - ../docs/api/openapi.yml:/usr/share/nginx/html/openapi.yml
    environment:
      - URL=/openapi.yml
    restart: always

volumes:
  postgres_data:
  grafana_data:
